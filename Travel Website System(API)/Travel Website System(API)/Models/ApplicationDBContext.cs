// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Travel_Website_System_API_.Models;

namespace Travel_Website_System_API.Models
{
    public partial class ApplicationDBContext : IdentityDbContext<ApplicationUser>
    {
        public ApplicationDBContext(DbContextOptions<ApplicationDBContext> options)
            : base(options)
        {
        }

        public DbSet<ApplicationUser> ApplicationUsers { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<BookingPackage> BookingPackages { get; set; }
        public virtual DbSet<BookingService> BookingServices { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Chat> Chats { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<CustomerService> CustomerServices { get; set; }
        public virtual DbSet<LovePackage> LovePackages { get; set; }
        public virtual DbSet<LoveService> LoveServices { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Package> Packages { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public DbSet<UserConnection> UserConnections { get; set; }


        public virtual DbSet<ServiceProvider> ServiceProviders { get; set; }

        public virtual DbSet<PackageService> PackageService { get; set; }

        public virtual DbSet<Contact> Contacts { get; set; }


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PackageService>()
                .HasKey(ps => new { ps.PackageId, ps.ServiceId });

            modelBuilder.Entity<PackageService>()
                .HasOne(ps => ps.Package)
                .WithMany(p => p.PackageServices)
                .HasForeignKey(ps => ps.PackageId);

            modelBuilder.Entity<PackageService>()
                .HasOne(ps => ps.Service)
                .WithMany(s => s.PackageServices)
                .HasForeignKey(ps => ps.ServiceId);

            modelBuilder.Entity<PackageService>()
                .Property(ps => ps.AddedOn)
                .HasDefaultValueSql("GETDATE()");

            base.OnModelCreating(modelBuilder);

            // Define the relationship between ApplicationUser and Message
            modelBuilder.Entity<ApplicationUser>()
                .HasMany(u => u.Messages)
                .WithOne(m => m.Receiver)
                .HasForeignKey(m => m.ReceiverId); // Assuming you have a UserId property in the Message class
        }
    }
    }

