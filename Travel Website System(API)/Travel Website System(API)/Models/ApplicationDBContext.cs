// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Travel_Website_System_API.Models;

public partial class ApplicationDBContext : DbContext
{
    public ApplicationDBContext()
    {
    }

    public ApplicationDBContext(DbContextOptions<ApplicationDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Admin> Admins { get; set; }

    public virtual DbSet<BookingPackage> BookingPackages { get; set; }

    public virtual DbSet<BookingService> BookingServices { get; set; }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Chat> Chats { get; set; }

    public virtual DbSet<Client> Clients { get; set; }

    public virtual DbSet<CustomerService> CustomerServices { get; set; }

    public virtual DbSet<LovePackage> LovePackages { get; set; }

    public virtual DbSet<LoveService> LoveServices { get; set; }

    public virtual DbSet<Message> Messages { get; set; }

    public virtual DbSet<Package> Packages { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<Service> Services { get; set; }

    public virtual DbSet<ServiceProvider> ServiceProviders { get; set; }

    public virtual DbSet<User> Users { get; set; }

    //protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //    => optionsBuilder.UseSqlServer("Data Source=YOUSEF\\SQLEXPRESS;Initial Catalog=Traveling;Integrated Security=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Arabic_CI_AS");

        modelBuilder.Entity<Admin>(entity =>
        {
            entity.HasKey(e => e.adminId).HasName("PK__Admin__AD0500A6EB9C0073");

            entity.Property(e => e.adminId).ValueGeneratedNever();

            entity.HasOne(d => d.user).WithMany(p => p.Admins).HasConstraintName("FK__Admin__userId__47DBAE45");
        });

        modelBuilder.Entity<BookingPackage>(entity =>
        {
            entity.HasKey(e => e.BookingPackageId).HasName("PK__BookingP__F74867E239B1827B");

            entity.Property(e => e.BookingPackageId).ValueGeneratedNever();

            entity.HasOne(d => d.client).WithMany(p => p.BookingPackages).HasConstraintName("FK__BookingPa__clien__59063A47");

            entity.HasOne(d => d.package).WithMany(p => p.BookingPackages).HasConstraintName("FK__BookingPa__packa__59FA5E80");
        });

        modelBuilder.Entity<BookingService>(entity =>
        {
            entity.HasKey(e => e.BookingServiceId).HasName("PK__BookingS__43F55CB10F4AF1E4");

            entity.Property(e => e.BookingServiceId).ValueGeneratedNever();

            entity.HasOne(d => d.client).WithMany(p => p.BookingServices).HasConstraintName("FK__BookingSe__clien__5535A963");

            entity.HasOne(d => d.service).WithMany(p => p.BookingServices).HasConstraintName("FK__BookingSe__servi__5629CD9C");
        });

        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.categoryId).HasName("PK__Category__23CAF1D8310AC031");

            entity.Property(e => e.categoryId).ValueGeneratedNever();
        });

        modelBuilder.Entity<Chat>(entity =>
        {
            entity.HasKey(e => e.chatId).HasName("PK__Chat__826385ADEA62FC88");

            entity.Property(e => e.chatId).ValueGeneratedNever();

            entity.HasOne(d => d.client).WithMany(p => p.Chats).HasConstraintName("FK__Chat__clientId__6EF57B66");

            entity.HasOne(d => d.customerService).WithMany(p => p.Chats).HasConstraintName("FK__Chat__customerSe__6E01572D");
        });

        modelBuilder.Entity<Client>(entity =>
        {
            entity.HasKey(e => e.clientId).HasName("PK__Client__81A2CBE1E24ECB7F");

            entity.Property(e => e.clientId).ValueGeneratedNever();

            entity.HasOne(d => d.user).WithMany(p => p.Clients)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Client__userId__3A81B327");
        });

        modelBuilder.Entity<CustomerService>(entity =>
        {
            entity.HasKey(e => e.customerServiceId).HasName("PK__Customer__408B6EB754B8A0FE");

            entity.Property(e => e.customerServiceId).ValueGeneratedNever();

            entity.HasOne(d => d.user).WithMany(p => p.CustomerServices).HasConstraintName("FK__CustomerS__userI__6B24EA82");
        });

        modelBuilder.Entity<LovePackage>(entity =>
        {
            entity.HasKey(e => new { e.clientId, e.packageId }).HasName("PK__LovePack__1B0A19EDAB436C1A");

            entity.HasOne(d => d.client).WithMany(p => p.LovePackages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LovePacka__clien__60A75C0F");

            entity.HasOne(d => d.package).WithMany(p => p.LovePackages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LovePacka__packa__619B8048");
        });

        modelBuilder.Entity<LoveService>(entity =>
        {
            entity.HasKey(e => new { e.clientId, e.serviceId }).HasName("PK__LoveServ__65F7CCEC15E2A4A1");

            entity.HasOne(d => d.client).WithMany(p => p.LoveServices)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LoveServi__clien__6477ECF3");

            entity.HasOne(d => d.service).WithMany(p => p.LoveServices)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LoveServi__servi__656C112C");
        });

        modelBuilder.Entity<Message>(entity =>
        {
            entity.HasKey(e => e.messageId).HasName("PK__Message__4808B993CF62E7D5");

            entity.Property(e => e.messageId).ValueGeneratedNever();

            entity.HasOne(d => d.chat).WithMany(p => p.Messages).HasConstraintName("FK__Message__chatId__71D1E811");
        });

        modelBuilder.Entity<Package>(entity =>
        {
            entity.HasKey(e => e.packageId).HasName("PK__Package__AA8D20C8A785F2B5");

            entity.Property(e => e.packageId).ValueGeneratedNever();

            entity.HasOne(d => d.admin).WithMany(p => p.Packages).HasConstraintName("FK__Package__adminId__4D94879B");
        });

        modelBuilder.Entity<Payment>(entity =>
        {
            entity.HasKey(e => e.PaymentID).HasName("PK__Payment__9B556A58D50CDE2C");

            entity.Property(e => e.PaymentID).ValueGeneratedNever();

            entity.HasOne(d => d.BookingPackage).WithMany(p => p.Payments).HasConstraintName("FK__Payment__Booking__5CD6CB2B");

            entity.HasOne(d => d.BookingService).WithMany(p => p.Payments).HasConstraintName("FK__Payment__Booking__5DCAEF64");
        });

        modelBuilder.Entity<Service>(entity =>
        {
            entity.HasKey(e => e.serviceId).HasName("PK__Services__455070DF92061F6A");

            entity.Property(e => e.serviceId).ValueGeneratedNever();

            entity.HasOne(d => d.category).WithMany(p => p.Services).HasConstraintName("FK__Services__catego__4222D4EF");

            entity.HasOne(d => d.serviceProvider).WithMany(p => p.Services).HasConstraintName("FK__Services__servic__412EB0B6");

            entity.HasMany(d => d.packages).WithMany(p => p.services)
                .UsingEntity<Dictionary<string, object>>(
                    "PackageService",
                    r => r.HasOne<Package>().WithMany()
                        .HasForeignKey("packageId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageSe__packa__52593CB8"),
                    l => l.HasOne<Service>().WithMany()
                        .HasForeignKey("serviceId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageSe__servi__5165187F"),
                    j =>
                    {
                        j.HasKey("serviceId", "packageId").HasName("PK__PackageS__DFF8A2D34D1E9D41");
                        j.ToTable("PackageService");
                    });
        });

        modelBuilder.Entity<ServiceProvider>(entity =>
        {
            entity.HasKey(e => e.serviceProviderId).HasName("PK__ServiceP__00FEF614563FA657");

            entity.Property(e => e.serviceProviderId).ValueGeneratedNever();
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.userId).HasName("PK__Users__CB9A1CFF129F083A");

            entity.Property(e => e.userId).ValueGeneratedNever();
            entity.Property(e => e.Gender).IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}