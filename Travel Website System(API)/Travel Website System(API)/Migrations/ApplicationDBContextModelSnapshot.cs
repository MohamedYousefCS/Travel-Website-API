// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel_Website_System_API.Models;

#nullable disable

namespace Travel_Website_System_API_.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PackageService", b =>
                {
                    b.Property<int>("serviceId")
                        .HasColumnType("int");

                    b.Property<int>("packageId")
                        .HasColumnType("int");

                    b.HasKey("serviceId", "packageId")
                        .HasName("PK__PackageS__DFF8A2D34D1E9D41");

                    b.HasIndex("packageId");

                    b.ToTable("PackageService", (string)null);
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Admin", b =>
                {
                    b.Property<int>("adminId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("adminId")
                        .HasName("PK__Admin__AD0500A6EB9C0073");

                    b.HasIndex("userId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.BookingPackage", b =>
                {
                    b.Property<int>("BookingPackageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("allowingTime")
                        .HasColumnType("date");

                    b.Property<int?>("clientId")
                        .HasColumnType("int");

                    b.Property<int?>("packageId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("BookingPackageId")
                        .HasName("PK__BookingP__F74867E239B1827B");

                    b.HasIndex("clientId");

                    b.HasIndex("packageId");

                    b.ToTable("BookingPackage");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.BookingService", b =>
                {
                    b.Property<int>("BookingServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("allowingTime")
                        .HasColumnType("date");

                    b.Property<int?>("clientId")
                        .HasColumnType("int");

                    b.Property<int?>("serviceId")
                        .HasColumnType("int");

                    b.HasKey("BookingServiceId")
                        .HasName("PK__BookingS__43F55CB10F4AF1E4");

                    b.HasIndex("clientId");

                    b.HasIndex("serviceId");

                    b.ToTable("BookingService");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("categoryId")
                        .HasName("PK__Category__23CAF1D8310AC031");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Chat", b =>
                {
                    b.Property<int>("chatId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("clientId")
                        .HasColumnType("int");

                    b.Property<int?>("customerServiceId")
                        .HasColumnType("int");

                    b.HasKey("chatId")
                        .HasName("PK__Chat__826385ADEA62FC88");

                    b.HasIndex("clientId");

                    b.HasIndex("customerServiceId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Client", b =>
                {
                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("clientId")
                        .HasName("PK__Client__81A2CBE1E24ECB7F");

                    b.HasIndex("userId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.CustomerService", b =>
                {
                    b.Property<int>("customerServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("customerServiceId")
                        .HasName("PK__Customer__408B6EB754B8A0FE");

                    b.HasIndex("userId");

                    b.ToTable("CustomerService");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.LovePackage", b =>
                {
                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("packageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("date");

                    b.HasKey("clientId", "packageId")
                        .HasName("PK__LovePack__1B0A19EDAB436C1A");

                    b.HasIndex("packageId");

                    b.ToTable("LovePackage");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.LoveService", b =>
                {
                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("serviceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("date");

                    b.HasKey("clientId", "serviceId")
                        .HasName("PK__LoveServ__65F7CCEC15E2A4A1");

                    b.HasIndex("serviceId");

                    b.ToTable("LoveService");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Message", b =>
                {
                    b.Property<int>("messageId")
                        .HasColumnType("int");

                    b.Property<int?>("chatId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("sender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("messageId")
                        .HasName("PK__Message__4808B993CF62E7D5");

                    b.HasIndex("chatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Package", b =>
                {
                    b.Property<int>("packageId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("adminId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("startDate")
                        .HasColumnType("date");

                    b.HasKey("packageId")
                        .HasName("PK__Package__AA8D20C8A785F2B5");

                    b.HasIndex("adminId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("BookingPackageId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Currencey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentID")
                        .HasName("PK__Payment__9B556A58D50CDE2C");

                    b.HasIndex("BookingPackageId");

                    b.HasIndex("BookingServiceId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Service", b =>
                {
                    b.Property<int>("serviceId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("serviceProviderId")
                        .HasColumnType("int");

                    b.HasKey("serviceId")
                        .HasName("PK__Services__455070DF92061F6A");

                    b.HasIndex("categoryId");

                    b.HasIndex("serviceProviderId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.ServiceProvider", b =>
                {
                    b.Property<int>("serviceProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("serviceProviderId")
                        .HasName("PK__ServiceP__00FEF614563FA657");

                    b.ToTable("ServiceProviders");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Lname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SSN")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("userId")
                        .HasName("PK__Users__CB9A1CFF129F083A");

                    b.HasIndex(new[] { "SSN" }, "UQ__Users__CA1E8E3C7CEBD894")
                        .IsUnique()
                        .HasFilter("[SSN] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PackageService", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Package", null)
                        .WithMany()
                        .HasForeignKey("packageId")
                        .IsRequired()
                        .HasConstraintName("FK__PackageSe__packa__52593CB8");

                    b.HasOne("Travel_Website_System_API.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("serviceId")
                        .IsRequired()
                        .HasConstraintName("FK__PackageSe__servi__5165187F");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Admin", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.User", "user")
                        .WithMany("Admins")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__Admin__userId__47DBAE45");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.BookingPackage", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Client", "client")
                        .WithMany("BookingPackages")
                        .HasForeignKey("clientId")
                        .HasConstraintName("FK__BookingPa__clien__59063A47");

                    b.HasOne("Travel_Website_System_API.Models.Package", "package")
                        .WithMany("BookingPackages")
                        .HasForeignKey("packageId")
                        .HasConstraintName("FK__BookingPa__packa__59FA5E80");

                    b.Navigation("client");

                    b.Navigation("package");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.BookingService", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Client", "client")
                        .WithMany("BookingServices")
                        .HasForeignKey("clientId")
                        .HasConstraintName("FK__BookingSe__clien__5535A963");

                    b.HasOne("Travel_Website_System_API.Models.Service", "service")
                        .WithMany("BookingServices")
                        .HasForeignKey("serviceId")
                        .HasConstraintName("FK__BookingSe__servi__5629CD9C");

                    b.Navigation("client");

                    b.Navigation("service");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Chat", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Client", "client")
                        .WithMany("Chats")
                        .HasForeignKey("clientId")
                        .HasConstraintName("FK__Chat__clientId__6EF57B66");

                    b.HasOne("Travel_Website_System_API.Models.CustomerService", "customerService")
                        .WithMany("Chats")
                        .HasForeignKey("customerServiceId")
                        .HasConstraintName("FK__Chat__customerSe__6E01572D");

                    b.Navigation("client");

                    b.Navigation("customerService");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Client", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.User", "user")
                        .WithMany("Clients")
                        .HasForeignKey("userId")
                        .IsRequired()
                        .HasConstraintName("FK__Client__userId__3A81B327");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.CustomerService", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.User", "user")
                        .WithMany("CustomerServices")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK__CustomerS__userI__6B24EA82");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.LovePackage", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Client", "client")
                        .WithMany("LovePackages")
                        .HasForeignKey("clientId")
                        .IsRequired()
                        .HasConstraintName("FK__LovePacka__clien__60A75C0F");

                    b.HasOne("Travel_Website_System_API.Models.Package", "package")
                        .WithMany("LovePackages")
                        .HasForeignKey("packageId")
                        .IsRequired()
                        .HasConstraintName("FK__LovePacka__packa__619B8048");

                    b.Navigation("client");

                    b.Navigation("package");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.LoveService", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Client", "client")
                        .WithMany("LoveServices")
                        .HasForeignKey("clientId")
                        .IsRequired()
                        .HasConstraintName("FK__LoveServi__clien__6477ECF3");

                    b.HasOne("Travel_Website_System_API.Models.Service", "service")
                        .WithMany("LoveServices")
                        .HasForeignKey("serviceId")
                        .IsRequired()
                        .HasConstraintName("FK__LoveServi__servi__656C112C");

                    b.Navigation("client");

                    b.Navigation("service");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Message", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Chat", "chat")
                        .WithMany("Messages")
                        .HasForeignKey("chatId")
                        .HasConstraintName("FK__Message__chatId__71D1E811");

                    b.Navigation("chat");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Package", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Admin", "admin")
                        .WithMany("Packages")
                        .HasForeignKey("adminId")
                        .HasConstraintName("FK__Package__adminId__4D94879B");

                    b.Navigation("admin");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Payment", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.BookingPackage", "BookingPackage")
                        .WithMany("Payments")
                        .HasForeignKey("BookingPackageId")
                        .HasConstraintName("FK__Payment__Booking__5CD6CB2B");

                    b.HasOne("Travel_Website_System_API.Models.BookingService", "BookingService")
                        .WithMany("Payments")
                        .HasForeignKey("BookingServiceId")
                        .HasConstraintName("FK__Payment__Booking__5DCAEF64");

                    b.Navigation("BookingPackage");

                    b.Navigation("BookingService");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Service", b =>
                {
                    b.HasOne("Travel_Website_System_API.Models.Category", "category")
                        .WithMany("Services")
                        .HasForeignKey("categoryId")
                        .HasConstraintName("FK__Services__catego__4222D4EF");

                    b.HasOne("Travel_Website_System_API.Models.ServiceProvider", "serviceProvider")
                        .WithMany("Services")
                        .HasForeignKey("serviceProviderId")
                        .HasConstraintName("FK__Services__servic__412EB0B6");

                    b.Navigation("category");

                    b.Navigation("serviceProvider");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Admin", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.BookingPackage", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.BookingService", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Client", b =>
                {
                    b.Navigation("BookingPackages");

                    b.Navigation("BookingServices");

                    b.Navigation("Chats");

                    b.Navigation("LovePackages");

                    b.Navigation("LoveServices");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.CustomerService", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Package", b =>
                {
                    b.Navigation("BookingPackages");

                    b.Navigation("LovePackages");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.Service", b =>
                {
                    b.Navigation("BookingServices");

                    b.Navigation("LoveServices");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.ServiceProvider", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Travel_Website_System_API.Models.User", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Clients");

                    b.Navigation("CustomerServices");
                });
#pragma warning restore 612, 618
        }
    }
}
